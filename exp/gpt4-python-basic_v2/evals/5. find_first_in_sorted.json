{
    "sample": {
        "prog_id": 5,
        "prog_name": "find_first_in_sorted",
        "language": "python",
        "testcase_num": 7,
        "fault_location": 4,
        "bug_type": "",
        "bug_detail_desc": "在whlie判斷式中，錯誤考慮了lo==hi的狀況，導致如目標不在陣列中的情況會無窮迴圈"
    },
    "patchs_eval": [
        {
            "run_time": 18.4032621383667,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 7,
            "fail_num": 0,
            "reparied_code": "def find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1\n    while lo < hi:\n        mid = (lo + hi) // 2\n        if x > arr[mid]:\n            lo = mid + 1\n        else:\n            hi = mid\n    if lo == len(arr) or arr[lo] != x:\n        return -1\n    return lo"
        },
        {
            "run_time": 22.759578704833984,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 7,
            "fail_num": 0,
            "reparied_code": "def find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1\n    while lo < hi:\n        mid = (lo + hi) // 2\n        if arr[mid] < x:\n            lo = mid + 1\n        else:\n            hi = mid - 1\n    if arr[lo] == x:\n        return lo\n    return -1"
        },
        {
            "run_time": 13.01993179321289,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 7,
            "fail_num": 0,
            "reparied_code": "def find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1\n    while lo <= hi:\n        mid = (lo + hi) // 2\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n        elif x <= arr[mid]:\n            hi = mid - 1\n        else:\n            lo = mid + 1\n    return -1"
        }
    ]
}