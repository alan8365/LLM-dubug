{
    "model_name": "gpt-4",
    "prompt": {
        "prompt": "Fix the bugs in the following code:\n```python=\n\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge\n    }\n    weight_by_node[source] = 0\n\n    for i in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            weight_by_edge[u, v] = min(\n                weight_by_node[u] + weight,\n                weight_by_node[v]\n            )\n\n    return weight_by_node\n\n\n\n\n```\nHere is the library code used in the code above:\n```python=\n\n```\nFixed code:\n",
        "sample": {
            "prog_id": 32,
            "prog_name": "shortest_paths",
            "language": "python",
            "fault_location": 0,
            "bug_type": ""
        },
        "prompt_type": "with_lib"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 14.439422130584717,
            "repaired_code": "\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge.keys()\n    }\n    weight_by_node[source] = 0\n\n    for _ in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            if weight_by_node[u] + weight < weight_by_node[v]:\n                weight_by_node[v] = weight_by_node[u] + weight\n\n    return weight_by_node",
            "raw_code": "```python\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge.keys()\n    }\n    weight_by_node[source] = 0\n\n    for _ in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            if weight_by_node[u] + weight < weight_by_node[v]:\n                weight_by_node[v] = weight_by_node[u] + weight\n\n    return weight_by_node\n```\nThe corrections made are:\n\n- The first line of the code tries to iterate over `weight_by_edge` and unpack each item into `(u, v)`. The `weight_by_edge` is a dictionary and when you iterate over a dictionary, you only get keys, not the values i.e. the whole items. To correctly unpack the keys which are tuples, we should iterate over the keys of the dictionary `weight_by_edge.keys()`.\n\n- The second bug is in the assignment inside the nested for loop. The dictionary `weight_by_edge` was being updated instead of `weight_by_node`. Also, the assignment was happening unconditionally but it's supposed to only happen if the newly calculated weight is less than the current weight. The corrected statement is `if weight_by_node[u] + weight < weight_by_node[v]: weight_by_node[v] = weight_by_node[u] + weight`.\n\n- The variable `i` is not used in the loop, so it was replaced with `_` to follow Python's convention for unused variables."
        },
        {
            "patch_id": 1,
            "run_time": 5.393362045288086,
            "repaired_code": "\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge.keys()\n    }\n    weight_by_node[source] = 0\n\n    for i in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            new_weight = min(\n                weight_by_node[u] + weight,\n                weight_by_node[v]\n            )\n            weight_by_node[v] = new_weight\n\n    return weight_by_node",
            "raw_code": "```python\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge.keys()\n    }\n    weight_by_node[source] = 0\n\n    for i in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            new_weight = min(\n                weight_by_node[u] + weight,\n                weight_by_node[v]\n            )\n            weight_by_node[v] = new_weight\n\n    return weight_by_node\n```"
        },
        {
            "patch_id": 2,
            "run_time": 4.499008893966675,
            "repaired_code": "\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge.keys()\n    }\n    weight_by_node[source] = 0\n\n    for i in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            weight_by_node[v] = min(\n                weight_by_node[u] + weight,\n                weight_by_node[v]\n            )\n\n    return weight_by_node",
            "raw_code": "```python\ndef shortest_paths(source, weight_by_edge):\n    weight_by_node = {\n        v: float('inf') for u, v in weight_by_edge.keys()\n    }\n    weight_by_node[source] = 0\n\n    for i in range(len(weight_by_node) - 1):\n        for (u, v), weight in weight_by_edge.items():\n            weight_by_node[v] = min(\n                weight_by_node[u] + weight,\n                weight_by_node[v]\n            )\n\n    return weight_by_node\n```"
        }
    ]
}