{
    "sample": {
        "prog_id": 14,
        "prog_name": "kth",
        "language": "python",
        "testcase_num": 7,
        "fault_location": 11,
        "bug_type": "",
        "bug_detail_desc": "在處理到k存在於大於pivot的陣列above時，遞迴呼叫沒有將k的輸入根據num_lessoreq重置，導致在該類狀況中k總是代表超過陣列的位置"
    },
    "patchs_eval": [
        {
            "run_time": 25.502413034439087,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 7,
            "fail_num": 0,
            "reparied_code": "def kth(arr, k):\n    pivot = arr[0]\n    below = [x for x in arr if x < pivot]\n    above = [x for x in arr if x > pivot]\n    equal = [x for x in arr if x == pivot]\n    num_less = len(below)\n    num_lessoreq = num_less + len(equal)\n    if k < num_less:\n        return kth(below, k)\n    elif k < num_lessoreq:\n        return pivot\n    else:\n        return kth(above, k - num_lessoreq)\n\n\narr = [10, 1, 12, 3, 14, 2, 5]\nk = 3\nprint(kth(arr, k - 1))"
        },
        {
            "run_time": 21.815184116363525,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 7,
            "fail_num": 0,
            "reparied_code": "def kth(arr, k):\n    pivot = arr[0]\n    below = [x for x in arr if x < pivot]\n    above = [x for x in arr if x > pivot]\n    equal = [x for x in arr if x == pivot]\n    num_less = len(below)\n    num_lessoreq = len(below) + len(equal)\n    if k < num_less:\n        return kth(below, k)\n    elif k >= num_lessoreq:\n        return kth(above, k - num_lessoreq)\n    else:\n        return pivot"
        },
        {
            "run_time": 17.849729776382446,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 7,
            "fail_num": 0,
            "reparied_code": "def kth(arr, k):\n    if not arr or k >= len(arr) or k < 0:\n        return None\n    pivot = arr[0]\n    below = [x for x in arr if x < pivot]\n    equal = [x for x in arr if x == pivot]\n    above = [x for x in arr if x > pivot]\n    num_less = len(below)\n    num_lessoreq = num_less + len(equal)\n    if k < num_less:\n        return kth(below, k)\n    elif k < num_lessoreq:\n        return pivot\n    else:\n        return kth(above, k - num_lessoreq)"
        }
    ]
}