{
    "sample": {
        "prog_id": 37,
        "prog_name": "to_base",
        "language": "python",
        "testcase_num": 10,
        "fault_location": 7,
        "bug_type": "",
        "bug_detail_desc": "在結果計算時，先計算出的是低位的結果，但是字串拼接時錯置了result跟新位的位置，造成得到的結果都是相反的，導致除迴文數外的結果都是錯誤的"
    },
    "patchs_eval": [
        {
            "run_time": 2.1626858711242676,
            "pass_num": 10,
            "fail_num": 0,
            "reparied_code": "\n\nimport string\ndef to_base(num, b):\n    result = ''\n    alphabet = string.digits + string.ascii_uppercase\n    if b < 0 or b > len(alphabet):\n        return \"Invalid base\"\n    while num > 0:\n        i = num % b\n        num = num // b\n        result = result + alphabet[i]\n    return result[::-1]\n\n\n\n\n"
        },
        {
            "run_time": 1.9421441555023193,
            "pass_num": 10,
            "fail_num": 0,
            "reparied_code": "\n\nimport string\ndef to_base(num, b):\n    result = ''\n    alphabet = string.digits + string.ascii_uppercase\n    if b > len(alphabet):\n      return \"invalid base\"\n    while num > 0:\n        i = num % b\n        num = num // b\n        result = result + alphabet[i]\n    return result[::-1]\n\n\n\n\n"
        },
        {
            "run_time": 2.155010223388672,
            "pass_num": 10,
            "fail_num": 0,
            "reparied_code": "\n\nimport string\ndef to_base(num, b):\n    result = ''\n    alphabet = string.digits + string.ascii_uppercase\n    if b <= 0 or b > len(alphabet):\n        return 'Invalid base'\n    while num > 0:\n        i = num % b\n        num = num // b\n        result = result + alphabet[i]\n    return result[::-1]\n\n\n\n\n"
        }
    ]
}