{
    "sample": {
        "prog_id": 12,
        "prog_name": "kheapsort",
        "language": "python",
        "testcase_num": 4,
        "fault_location": 6,
        "bug_type": "",
        "bug_detail_desc": "在遍歷陣列時沒有排除已經在heap中的元素，導致除了k為0以外的輸入皆會產生錯誤"
    },
    "patchs_eval": [
        {
            "run_time": 3.8628928661346436,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 0,
            "fail_num": 0,
            "reparied_code": "yield heapq.heappushpop(heap, x)\n   ```\n   should be changed to:\n   ```python=\n   yield x\n   ```\nThe fixed code:"
        },
        {
            "run_time": 4.300213813781738,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 1,
            "fail_num": 3,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n    heap = arr[:k]\n    heapq.heapify(heap)\n    for x in arr:\n        yield heapq.heappushpop(heap, x)\n    while heap:\n        yield heapq.heapreplace(heap, float('-inf'))\n    return heap"
        },
        {
            "run_time": 6.779516935348511,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 0,
            "fail_num": 4,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n    heap = arr[:k]\n    heapq.heapify(heap)\n    for x in arr[k:]:\n        heapq.heappushpop(heap, x)\n    if len(arr) < k:\n        yield heap\n    while heap:\n        yield heapq.heappop(heap)"
        }
    ]
}