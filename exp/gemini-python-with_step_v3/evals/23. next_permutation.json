{
    "sample": {
        "prog_id": 23,
        "prog_name": "next_permutation",
        "language": "python",
        "testcase_num": 8,
        "fault_location": 4,
        "bug_type": "",
        "bug_detail_desc": "在檢查首元素要置換為哪個元素時，將首元素索引i和比較元素索引j錯誤的置換，導致所有輸出都是錯誤或直接輸出空值"
    },
    "patchs_eval": [
        {
            "run_time": 4.523499965667725,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 0,
            "fail_num": 8,
            "reparied_code": "def next_permutation(perm):\n    if perm == sorted(perm, reverse=True):\n        return sorted(perm)\n    for i in range(len(perm) - 2, -1, -1):\n        if perm[i] < perm[i + 1]:\n            for j in range(len(perm) - 1, i, -1):\n                if perm[j] < perm[i]:\n                    next_perm = list(perm)\n                    next_perm[i], next_perm[j] = perm[j], perm[i]\n                    next_perm[i + 1:] = reversed(next_perm[i + 1:])\n                    return next_perm"
        },
        {
            "run_time": 8.469835996627808,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 0,
            "fail_num": 8,
            "reparied_code": "def next_permutation(perm):\n    if len(perm) <= 1:\n        return perm\n    i = len(perm) - 2\n    while i >= 0 and perm[i + 1] <= perm[i]:\n        i -= 1\n    if i < 0:\n        return None\n    j = len(perm) - 1\n    while j >= 0 and perm[j] <= perm[i]:\n        j -= 1\n    next_perm = list(perm)\n    next_perm[i], next_perm[j] = swap(next_perm[i], next_perm[j])\n    next_perm[i + 1:] = reversed(next_perm[i + 1:])\n    return next_perm"
        },
        {
            "run_time": 9.06980299949646,
            "is_plausible": true,
            "is_correct": false,
            "pass_num": 8,
            "fail_num": 0,
            "reparied_code": "def next_permutation(perm):\n    for i in range(len(perm) - 2, -1, -1):\n        if perm[i] < perm[i + 1]:\n            for j in range(len(perm) - 1, i, -1):\n                if perm[j] > perm[i]:\n                    next_perm = list(perm)\n                    next_perm[i], next_perm[j] = perm[j], perm[i]\n                    next_perm[i + 1:] = reversed(next_perm[i + 1:])\n                    return next_perm\n    return None"
        }
    ]
}