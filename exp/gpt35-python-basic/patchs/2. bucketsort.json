{
    "model_name": "gpt-3.5-turbo-0125",
    "prompt": {
        "prompt": "Fix the bugs in the following code:\n```python=\ndef bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(arr):\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr\n```\n\nFixed code:\n",
        "sample": {
            "prog_id": 2,
            "prog_name": "bucketsort",
            "language": "python"
        },
        "prompt_type": "basic"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 2.220660924911499,
            "repaired_code": "def bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(counts):  # Fixed the variable name from 'arr' to 'counts'\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr",
            "raw_code": "```python\ndef bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(counts):  # Fixed the variable name from 'arr' to 'counts'\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr\n```"
        },
        {
            "patch_id": 1,
            "run_time": 2.2554941177368164,
            "repaired_code": "def bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(counts): # Fixed bug: enumerate counts instead of arr\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr",
            "raw_code": "```python\ndef bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(counts): # Fixed bug: enumerate counts instead of arr\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr\n```"
        },
        {
            "patch_id": 2,
            "run_time": 29.03350305557251,
            "repaired_code": "def bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(counts):  # changed 'arr' to 'counts'\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr",
            "raw_code": "```python\ndef bucketsort(arr, k):\n    counts = [0] * k\n    for x in arr:\n        counts[x] += 1\n\n    sorted_arr = []\n    for i, count in enumerate(counts):  # changed 'arr' to 'counts'\n        sorted_arr.extend([i] * count)\n\n    return sorted_arr\n```"
        }
    ]
}