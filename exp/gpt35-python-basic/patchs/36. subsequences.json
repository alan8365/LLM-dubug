{
    "model_name": "gpt-3.5-turbo-0125",
    "prompt": {
        "prompt": "Fix the bugs in the following code:\n```python=\ndef subsequences(a, b, k):\n    if k == 0:\n        return []\n\n    ret = []\n    for i in range(a, b + 1 - k):\n        ret.extend(\n            [i] + rest for rest in subsequences(i + 1, b, k - 1)\n        )\n\n    return ret\n```\n\nFixed code:\n",
        "sample": {
            "prog_id": 36,
            "prog_name": "subsequences",
            "language": "python"
        },
        "prompt_type": "basic"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 1.623311996459961,
            "repaired_code": "def subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1):\n        for subseq in subsequences(i + 1, b, k - 1):\n            ret.append([i] + subseq)\n\n    return ret",
            "raw_code": "```python\ndef subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1):\n        for subseq in subsequences(i + 1, b, k - 1):\n            ret.append([i] + subseq)\n\n    return ret\n```"
        },
        {
            "patch_id": 1,
            "run_time": 1.9560797214508057,
            "repaired_code": "def subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1):\n        for rest in subsequences(i + 1, b, k - 1):\n            ret.append([i] + rest)\n\n    return ret",
            "raw_code": "```python\ndef subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1):\n        for rest in subsequences(i + 1, b, k - 1):\n            ret.append([i] + rest)\n\n    return ret\n```"
        },
        {
            "patch_id": 2,
            "run_time": 2.24113392829895,
            "repaired_code": "def subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1):\n        for rest in subsequences(i + 1, b, k - 1):\n            ret.append([i] + rest)\n\n    return ret",
            "raw_code": "```python\ndef subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1):\n        for rest in subsequences(i + 1, b, k - 1):\n            ret.append([i] + rest)\n\n    return ret\n```"
        }
    ]
}