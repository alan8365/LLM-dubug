{
    "model_name": "gpt-4",
    "prompt": {
        "prompt": "Fix the bugs in the following code:\n```python=\n\ndef sqrt(x, epsilon):\n    approx = x / 2\n    while abs(x - approx) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx\n\n\n\n```\n\nFixed code:\n",
        "sample": {
            "prog_id": 35,
            "prog_name": "sqrt",
            "language": "python"
        },
        "prompt_type": "basic"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 5.123104095458984,
            "repaired_code": "def sqrt(x, epsilon):\n    if x < 0 or epsilon <= 0:\n        return \"Invalid input\"\n        \n    approx = x / 2.0\n    while abs(x - (approx ** 2)) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx",
            "raw_code": "```python\ndef sqrt(x, epsilon):\n    if x < 0 or epsilon <= 0:\n        return \"Invalid input\"\n        \n    approx = x / 2.0\n    while abs(x - (approx ** 2)) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx\n```"
        },
        {
            "patch_id": 1,
            "run_time": 3.99626088142395,
            "repaired_code": "def sqrt(x, epsilon):\n    if x < 0 or epsilon <= 0:\n        print(\"x must be non-negative, epsilon must be greater than zero\")\n        return\n    approx = x / 2.0\n    while abs(approx*approx - x) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx",
            "raw_code": "```python\ndef sqrt(x, epsilon):\n    if x < 0 or epsilon <= 0:\n        print(\"x must be non-negative, epsilon must be greater than zero\")\n        return\n    approx = x / 2.0\n    while abs(approx*approx - x) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx\n```"
        },
        {
            "patch_id": 2,
            "run_time": 2.686490058898926,
            "repaired_code": "def sqrt(x, epsilon):\n    approx = x / 2\n    while abs(x - approx * approx) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx",
            "raw_code": "```python\ndef sqrt(x, epsilon):\n    approx = x / 2\n    while abs(x - approx * approx) > epsilon:\n        approx = 0.5 * (approx + x / approx)\n    return approx\n```"
        }
    ]
}