{
    "model_name": "gemini-1.0-pro",
    "prompt": {
        "prompt": "Fix the bug in the following code. The bug is on the line commented below:\n```python=\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr)\n\n    while lo <= hi: # The bug is here\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid\n\n        else:\n            lo = mid + 1\n\n    return -1\n```\nFixed code:\n",
        "sample": {
            "prog_id": 5,
            "prog_name": "find_first_in_sorted",
            "language": "python",
            "testcase_num": 7,
            "fault_location": 4,
            "bug_type": "",
            "bug_detail_desc": "\u5728whlie\u5224\u65b7\u5f0f\u4e2d\uff0c\u932f\u8aa4\u8003\u616e\u4e86lo==hi\u7684\u72c0\u6cc1\uff0c\u5c0e\u81f4\u5982\u76ee\u6a19\u4e0d\u5728\u9663\u5217\u4e2d\u7684\u60c5\u6cc1\u6703\u7121\u7aae\u8ff4\u5708"
        },
        "prompt_type": "with_location"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 4.096944093704224,
            "repaired_code": "\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr)\n\n    while lo < hi: # Fixed the condition\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid\n\n        else:\n            lo = mid + 1\n\n    return -1",
            "raw_code": "The bug is in the condition `while lo <= hi`. It should be `while lo < hi` because the `mid` value is rounded down to the nearest integer, which means that `lo` and `hi` could be equal when `x` is equal to the last element in the array. This causes the loop to terminate too early, and the function may not find the first occurrence of `x` in the array.\n\nFixed code:\n```python\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr)\n\n    while lo < hi: # Fixed the condition\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid\n\n        else:\n            lo = mid + 1\n\n    return -1\n```"
        },
        {
            "patch_id": 1,
            "run_time": 2.8210151195526123,
            "repaired_code": "\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1 # The bug is here\n\n    while lo <= hi: # The bug is here\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid - 1\n\n        else:\n            lo = mid + 1\n\n    return -1",
            "raw_code": "```python\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1 # The bug is here\n\n    while lo <= hi: # The bug is here\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid - 1\n\n        else:\n            lo = mid + 1\n\n    return -1\n```"
        },
        {
            "patch_id": 2,
            "run_time": 2.744194746017456,
            "repaired_code": "\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1 # The bug is here\n\n    while lo <= hi: # The bug is here\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid - 1 # The bug is here\n\n        else:\n            lo = mid + 1\n\n    return -1",
            "raw_code": "```python\ndef find_first_in_sorted(arr, x):\n    lo = 0\n    hi = len(arr) - 1 # The bug is here\n\n    while lo <= hi: # The bug is here\n        mid = (lo + hi) // 2\n\n        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):\n            return mid\n\n        elif x <= arr[mid]:\n            hi = mid - 1 # The bug is here\n\n        else:\n            lo = mid + 1\n\n    return -1\n```"
        }
    ]
}