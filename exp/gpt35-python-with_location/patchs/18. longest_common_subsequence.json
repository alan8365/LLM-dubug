{
    "model_name": "gpt-3.5-turbo-0125",
    "prompt": {
        "prompt": "Fix the bug in the following code. The bug is on the line commented below:\n```python=\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b) # The bug is here\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )\n```\nFixed code:\n",
        "sample": {
            "prog_id": 18,
            "prog_name": "longest_common_subsequence",
            "language": "python",
            "testcase_num": 10,
            "fault_location": 5,
            "bug_type": "",
            "bug_detail_desc": "\u5728\u5169\u5b57\u4e32\u9996\u5b57\u4e00\u81f4\u547c\u53eb\u905e\u8ff4\u5f0f\u7684\u60c5\u6cc1\u4e0b\uff0c\u5b57\u4e32b\u6c92\u6709\u79fb\u9664\u9996\u5b57\u4fbf\u76f4\u63a5\u8f38\u5165\uff0c\u5c0e\u81f4\u4e0d\u65b7\u91cd\u8907\u6bd4\u8f03\u8f38\u51fa\u932f\u8aa4\u7b54\u6848"
        },
        "prompt_type": "with_location"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 2.922039031982422,
            "repaired_code": "\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b[1:]) # Fixed bug\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )",
            "raw_code": "```python\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b[1:]) # Fixed bug\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )\n```"
        },
        {
            "patch_id": 1,
            "run_time": 2.603569269180298,
            "repaired_code": "\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b[1:]) # Fixed the bug\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )",
            "raw_code": "```python\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b[1:]) # Fixed the bug\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )\n```"
        },
        {
            "patch_id": 2,
            "run_time": 2.8663861751556396,
            "repaired_code": "\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b[1:])  # Fixed bug\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )",
            "raw_code": "```python\ndef longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n        return a[0] + longest_common_subsequence(a[1:], b[1:])  # Fixed bug\n\n    else:\n        return max(\n            longest_common_subsequence(a, b[1:]),\n            longest_common_subsequence(a[1:], b),\n            key=len\n        )\n```"
        }
    ]
}