{
    "sample": {
        "prog_id": 12,
        "prog_name": "kheapsort",
        "language": "python",
        "testcase_num": 4,
        "fault_location": 6,
        "bug_type": "",
        "bug_detail_desc": "在遍歷陣列時沒有排除已經在heap中的元素，導致除了k為0以外的輸入皆會產生錯誤"
    },
    "patchs_eval": [
        {
            "run_time": 4.815217018127441,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 0,
            "fail_num": 4,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n\n    heap = []\n    for x in arr:\n        heapq.heappush(heap, -x)\n        if len(heap) > k:\n            heapq.heappop(heap)\n    while heap:\n        yield -heapq.heappop(heap)"
        },
        {
            "run_time": 3.654409885406494,
            "is_plausible": true,
            "is_correct": true,
            "pass_num": 4,
            "fail_num": 0,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n    for x in arr[k:]:\n        yield heapq.heappushpop(heap, x)\n    while heap:\n        yield heapq.heappop(heap)"
        },
        {
            "run_time": 5.449185132980347,
            "is_plausible": true,
            "is_correct": true,
            "pass_num": 4,
            "fail_num": 0,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n    for x in arr[k:]:\n        yield heapq.heappushpop(heap, x)\n    while heap:\n        yield heapq.heappop(heap)"
        }
    ]
}