{
    "model_name": "gemini-1.0-pro",
    "prompt": {
        "prompt": "Fix the bugs in the following code:\n```python=\ndef subsequences(a, b, k):\n    if k == 0:\n        return []\n\n    ret = []\n    for i in range(a, b + 1 - k):\n        ret.extend(\n            [i] + rest for rest in subsequences(i + 1, b, k - 1)\n        )\n\n    return ret\n\n\n\n\n\n\n```\n\nFixed code:\n",
        "sample": {
            "prog_id": 36,
            "prog_name": "subsequences",
            "language": "python",
            "fault_location": 0,
            "bug_type": ""
        },
        "prompt_type": "basic"
    },
    "patches": [
        {
            "patch_id": 0,
            "run_time": 2.348088264465332,
            "repaired_code": "\ndef subsequences(a, b, k):\n    if k == 0:\n        return []\n\n    ret = []\n    for i in range(a, b + 1 - k + 1):\n        ret.extend(\n            [i] + rest for rest in subsequences(i + 1, b, k - 1)\n        )\n\n    return ret",
            "raw_code": "```python\ndef subsequences(a, b, k):\n    if k == 0:\n        return []\n\n    ret = []\n    for i in range(a, b + 1 - k + 1):\n        ret.extend(\n            [i] + rest for rest in subsequences(i + 1, b, k - 1)\n        )\n\n    return ret\n```"
        },
        {
            "patch_id": 1,
            "run_time": 4.865142107009888,
            "repaired_code": "\ndef subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1 - k + 1):\n        ret.extend([[i] + rest for rest in subsequences(i + 1, b, k - 1)])\n\n    return ret",
            "raw_code": "```python=\ndef subsequences(a, b, k):\n    if k == 0:\n        return [[]]\n\n    ret = []\n    for i in range(a, b + 1 - k + 1):\n        ret.extend([[i] + rest for rest in subsequences(i + 1, b, k - 1)])\n\n    return ret\n```"
        },
        {
            "patch_id": 2,
            "run_time": 2.180511236190796,
            "repaired_code": "\ndef subsequences(a, b, k):\n    if k == 0:\n        return []\n\n    ret = []\n    for i in range(a, b):\n        ret.extend(\n            [i] + rest for rest in subsequences(i + 1, b + 1, k - 1)\n        )\n\n    return ret",
            "raw_code": "```python\ndef subsequences(a, b, k):\n    if k == 0:\n        return []\n\n    ret = []\n    for i in range(a, b):\n        ret.extend(\n            [i] + rest for rest in subsequences(i + 1, b + 1, k - 1)\n        )\n\n    return ret\n```"
        }
    ]
}