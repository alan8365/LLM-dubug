{
    "sample": {
        "prog_id": 12,
        "prog_name": "kheapsort",
        "language": "python",
        "testcase_num": 4,
        "fault_location": 6,
        "bug_type": "",
        "bug_detail_desc": "在遍歷陣列時沒有排除已經在heap中的元素，導致除了k為0以外的輸入皆會產生錯誤"
    },
    "patchs_eval": [
        {
            "run_time": 4.086192846298218,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 0,
            "fail_num": 4,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n    heap = arr[:k]\n    heapq.heapify(heap)\n    return (heapq.heappushpop(heap, x) for x in arr) + tuple(heapq.heappop(heap) for _ in range(len(heap)))"
        },
        {
            "run_time": 3.727804183959961,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 1,
            "fail_num": 3,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n    heap = arr[:k]\n    heapq.heapify(heap)\n    for x in arr:\n        if x not in heap:\n            yield x\n        else:\n            yield heapq.heappushpop(heap, x)\n    while heap:\n        yield heapq.heappop(heap)"
        },
        {
            "run_time": 3.0314741134643555,
            "is_plausible": false,
            "is_correct": false,
            "pass_num": 1,
            "fail_num": 3,
            "reparied_code": "def kheapsort(arr, k):\n    import heapq\n    heap = arr[:k]\n    heapq.heapify(heap)\n    for x in arr:\n        yield heapq.heappushpop(heap, x)\n    while heap:\n        yield heapq.heappop(heap)"
        }
    ]
}