{
    "sample": {
        "prog_id": 26,
        "prog_name": "powerset",
        "language": "python",
        "testcase_num": 5,
        "fault_location": 4,
        "bug_type": "",
        "bug_detail_desc": "在遞迴的回傳值中沒有把rest_subsets也加入，造成每次遞迴都不存在空集合，導致所有輸出都只會輸出輸入陣列本身所以都是錯誤的"
    },
    "patchs_eval": [
        {
            "run_time": 21.97631287574768,
            "pass_num": 0,
            "fail_num": 0,
            "reparied_code": "\narr = [1, 2, 3]\nresult = powerset(arr)\nprint(result)"
        },
        {
            "run_time": 24.88656497001648,
            "pass_num": 5,
            "fail_num": 0,
            "reparied_code": "\ndef powerset(arr):\n    if arr:\n        # Destructure the list into the first element and the rest of the list\n        first, *rest = arr\n        \n        # Recursively generate the powerset of the rest of the list\n        rest_subsets = powerset(rest)\n        \n        # Combine the first element with each subset of the rest of the list\n        # and create a new list of subsets that include the first element\n        subsets_with_first = [[first] + subset for subset in rest_subsets]\n        \n        # Combine the subsets that include the first element with the subsets that don't\n        return rest_subsets + subsets_with_first\n    else:\n        # Base case: an empty list has only one subset, which is an empty list\n        return [[]]"
        },
        {
            "run_time": 19.550922870635986,
            "pass_num": 5,
            "fail_num": 0,
            "reparied_code": "\ndef powerset(arr):\n    if arr:\n        first, *rest = arr\n        rest_subsets = powerset(rest)\n        return rest_subsets + [[first] + subset for subset in rest_subsets]\n    else:\n        return [[]]"
        }
    ]
}